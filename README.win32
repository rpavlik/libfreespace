libfreespace Build info
Updated 8/2/2013

General Information
===================

This document describes the build process for libfreespace on Windows.


Required Tools
===================

The tools required to fully build libfreespace are:

1)  bazaar          http://bazaar-vcs.org/WindowsDownloads/
    Use a stable release.

2)  Python v2       http://www.python.org/download/
    Update the environment variable PATH to include the folder that contain
    python.exe.

3)  Doxygen         http://www.stack.nl/~dimitri/doxygen/download.html
    The configuration file doc\Doxyfile is compatible with doxygen 1.8.0.

4)  Graphviz        http://www.graphviz.org/Download_windows.php
    As of writing, we are using version 2.30.1

5)  CMake v2.8      http://www.cmake.org/

6)  One of MS Visual Studio 8.0 (2005), 9.0 (2008), 10 (2010), 11 (2012)
	The "Express" versions work just fine, although they lack 64-bit compilers.
    Only the Visual C/C++ parts arenecessary.

7)  Windows Driver Development Kit (WinDDK) 7.1.0
    The WDK can be obtained from Microsoft by following the instructions at:
    http://msdn.microsoft.com/en-us/library/windows/hardware/gg487428.aspx

    CMake will automatically look for the DDK at C:\WinDDK\7600.16385.1.
    If you install the DDK elsewhere, you can either point to it during the
    configuration process, or you can point the environment variable
    "WINDDK_DIR" to it and CMake will find it.

    At the moment, the newest WDK 8.0 is not supported.


Getting the files
===================

To correctly check out all of the repositories, change to the <base>
directory, and then run the following checkout.sh script:
    #!/bin/sh
    bzr branch lp:libfreespace libfreespace

If you find this doesn't work, try:
    bzr branch lp:~libfreespace-devteam/libfreespace/cmake libfreespace

Building
===================

Launch cmake-gui.

Fill in the "Where is the source code:" entry. This will be the location of the
libfreespace directory. (e.g. c:\Hillcrest\libfreespace)

Fill in the "Where to build the binaries" entry. This can be anywhere but a
reasonable location is c:\Hillcrest\build\libfreespace. 

If some configuration data opens up when you enter the build directory, it means
that the directory already had a build in it. You can reset the build directory
by selecting File > Delete Cache.

Click "Configure". You will be prompted to select a generator for this project.
Choose any of the supported generators:
    Visual Studio 8 2005
    Visual Studio 9 2008
    Visual Studio 10
    Visual Studio 11

At this point, all the configuration settings will be red. This is the time to 
make any changes to the settings that are displayed. Not all settings are
required, however some important ones are:

The WINDDK_DIR variable. If your WinDDK is installed in a typical location then
cmake should be able to detect it for you. A typical setting is:
    C:\WinDDK\7600.16385.1

If using Visual Studio 8 or 9, the VC8_INCLUDE or VC9_INCLUDE variable. If your
Visual Studio installation is in a typical location cmake should be able to 
detect it for you. A typical setting is:
    C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\include

There are other configuration settings available:

CMAKE_INSTALL_PREFIX :
	The installation directory where the CMake install project will install to.
	This is initiated by building the "INSTALL" project in the VS solution.
	Default is typically "C:\Program Files (x86)\libfreespace"
LIBFREESPACE_BACKEND :
    Specify an alternate backend on some paltforms. On Linux, valid values are
    'hidraw' and 'libusb'
LIBFREESPACE_CODECS_ONLY : (ON/OFF)
    Build only the libfreespace codecs
LIBFREESPACE_CUSTOM_INSTALL_RULES :
    CMake file to customize install rules when libfreespace is built as part of
    a larger project
LIBFREESPACE_DOCS_ENABLED : (ON/OFF)
    Enabled doxygen docs as build target
LIBFREESPACE_DOCS_INTERNAL : (ON/OFF)
    Generate doxygen for src files (in addition to API)
LIBFREESPACE_HIDRAW_THREADED_WRITES : (ON/OFF)
    Enable writes in a backend thread when using hidraw
LIBFREESPACE_LIB_TYPE : (SHARED/STATIC)
    The type of library to create
LIBFREESPACE_ADDITIONAL_MESSAGE_FILE :
    Reserved for Hillcrest use. An additional HID message definition file.

Set whatever configuration settings you wish, then click "Configure" until all
red bars are gone. If a red bar persists, it means that setting will need to
be set manually.

Once the red bars are gone click "Generate".

There should now be a Visual Studio project under the "Where to build the
binaries" location. The project will be called libfreespace.sln .

Open this project. Press F7 to build all. There should now be a
libfreespace.lib file in the Debug directory of the build directory.

If you wish to use the "INSTALL" feature of cmake, you will need to open
Visual Studio using administrator privileges. Then right click the "INSTALL"
project and click "Build". There will now be a libfreespace build in the
install directory pointed to by CMAKE_INSTALL_PREFIX.

Documentation
=============

To make the doxygen documentation, you can simply build the libfreespace-docs
project in the libfreespace solution.
    1) Open an explorer window to your build directory
    2) Open libfreespace.sln
    3) Right click on the libfreespace-docs project and click "Build"
    4) You can open the documentation by returning to the explorer window, and
    opening docs > html > index.html

You can also build the documentation from the command line by opening a command
window in your build directory:
    1) Open an explorer window to your build directory
    2) Shift-(Right Click) on the window and select "Open command window here"
    3) In the command window, enter:
    cd doc
    doxygen Doxyfile
    4) From here you can open it using
    ./html/index.html