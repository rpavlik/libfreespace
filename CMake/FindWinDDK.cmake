# Find WDK
#
# This module defines
#  WINDDK_FOUND
#  WINDDK_DIR
#  WINDDK_INCLUDE_DIR
#  WINDDK_WINXP_X86_LIBS
#  WINDDK_WIN7_X86_LIBS
#  WINDDK_WIN7_X64_LIBS
#

IF (NOT DEFINED WINDDK_FOUND)

	# If WINDDK_DIR was defined in the environment, use it.
	IF (NOT DEFINED WINDDK_DIR AND NOT $ENV{WINDDK_DIR} STREQUAL "")
		SET(WINDDK_DIR $ENV{WINDDK_DIR})
	ENDIF()

	# If the WinDDK was not defined in the environment variables, take a couple guesses about where it could be
	# It only looks for the version 7, i.e. ~/WinDDK/7*
	IF(NOT DEFINED WINDDK_DIR AND EXISTS "C:/WinDDK" AND IS_DIRECTORY "C:/WinDDK")
		FILE(GLOB WINDDK_DIR "C:/WinDDK/7*")
	ENDIF()
	IF(NOT DEFINED WINDDK_DIR AND EXISTS "C:/Program Files/WinDDK" AND IS_DIRECTORY "C:/Program Files/WinDDK")
		FILE(GLOB WINDDK_DIR "C:/Program Files/WinDDK/7*")
	ENDIF()
	IF(NOT DEFINED WINDDK_DIR AND EXISTS "C:/Program Files (x86)/WinDDK" AND IS_DIRECTORY "C:/Program Files (x86)/WinDDK")
		FILE(GLOB WINDDK_DIR "C:/Program Files (x86)/WinDDK/7*")
	ENDIF()

	IF(DEFINED WINDDK_DIR)
		SET(WINDDK_FOUND TRUE CACHE INTERNAL "" FORCE)
	ENDIF()

	SET(WINDDK_DIR ${WINDDK_DIR} CACHE PATH "The WINDDK path for Windows 32-bit builds" FORCE)

	# log find result
	IF(WINDDK_FOUND)
		IF(NOT FIND_WINDDK_QUIETLY)
			MESSAGE(STATUS "WinDDK in ${WINDDK_DIR}")
		ENDIF()
	ELSE()
		MESSAGE(FATAL_ERROR "Could not locate WinDDK - Specify path using the WINDDK_DIR variable")
	ENDIF()
ENDIF()

# Search for header files

SET(WINDDK_INCLUDE_SEARCH_DIRS ${WINDDK_DIR}/inc )
FIND_PATH(WINDDK_INCLUDE_DIR api/hidpi.h
	PATHS ${WINDDK_INCLUDE_SEARCH_DIRS} )
SET(WINDDK_INCLUDE_DIR ${WINDDK_INCLUDE_DIR} 
	CACHE STRING "Directory containing Ms WinDDK header files")

# Search for Win7-x86 libs

SET(WINDDK_LIBRARY_SEARCH_DIRS "${WINDDK_DIR}/lib/win7/i386")
FIND_LIBRARY(WINDDK_HID_LIBRARY hid.lib
  	PATHS ${WINDDK_LIBRARY_SEARCH_DIRS})
FIND_LIBRARY(WINDDK_SETUPAPI_LIBRARY setupapi
  	PATHS ${WINDDK_LIBRARY_SEARCH_DIRS})
SET(WINDDK_WIN7_X86_LIBS "${WINDDK_HID_LIBRARY}" "${WINDDK_SETUPAPI_LIBRARY}" 
	CACHE STRING "MS WinDDK Win7-x86 libraries")
UNSET(WINDDK_LIBRARY_SEARCH_DIRS CACHE)
UNSET(WINDDK_HID_LIBRARY CACHE)
UNSET(WINDDK_SETUPAPI_LIBRARY CACHE)

# Search for Win7-x64 libs

SET(WINDDK_LIBRARY_SEARCH_DIRS "${WINDDK_DIR}/lib/win7/amd64")
FIND_LIBRARY(WINDDK_HID_LIBRARY hid.lib
  	PATHS ${WINDDK_LIBRARY_SEARCH_DIRS})
FIND_LIBRARY(WINDDK_SETUPAPI_LIBRARY setupapi
  	PATHS ${WINDDK_LIBRARY_SEARCH_DIRS})
SET(WINDDK_WIN7_X64_LIBS "${WINDDK_HID_LIBRARY}" "${WINDDK_SETUPAPI_LIBRARY}" 
	CACHE STRING "MS WinDDK Win7-x64 libraries")
UNSET(WINDDK_LIBRARY_SEARCH_DIRS CACHE)
UNSET(WINDDK_HID_LIBRARY CACHE)
UNSET(WINDDK_SETUPAPI_LIBRARY CACHE)

# Search for WinXP-x86 libs

SET(WINDDK_LIBRARY_SEARCH_DIRS "${WINDDK_DIR}/lib/wxp/i386")
FIND_LIBRARY(WINDDK_HID_LIBRARY hid.lib
  	PATHS ${WINDDK_LIBRARY_SEARCH_DIRS})
FIND_LIBRARY(WINDDK_SETUPAPI_LIBRARY setupapi
  	PATHS ${WINDDK_LIBRARY_SEARCH_DIRS})
SET(WINDDK_WINXP_X64_LIBS "${WINDDK_HID_LIBRARY}" "${WINDDK_SETUPAPI_LIBRARY}" 
	CACHE STRING "MS WinDDK WinXP-x86 libraries")
UNSET(WINDDK_LIBRARY_SEARCH_DIRS CACHE)
UNSET(WINDDK_HID_LIBRARY CACHE)
UNSET(WINDDK_SETUPAPI_LIBRARY CACHE)

# Set most variables as advanced
MARK_AS_ADVANCED(WINDDK_INCLUDE_DIR WINDDK_WIN7_X86_LIBS WINDDK_WIN7_X64_LIBS WINDDK_WINXP_X64_LIBS)